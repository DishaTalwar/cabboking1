/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cabboking1;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author acs
 */
public class userhome extends javax.swing.JFrame {

    /**
     * Creates new form userhome
     */
    int width, height;
   
    String username;

    public userhome(String username) {
        initComponents();

        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();

        height = d.height;
        width = d.width;

        setVisible(true);
        setSize(width, height);

        menubar.setBounds(10, 10, width, 150);

        sidebar1.setBounds(10, 170, 200, height);

        this.username = username;
        menubar.setBounds(10, 10, width, 150);
        jScrollPane1.setBounds(250, 170, width - 500, height);
        welcome_user.setText("welcome" + username);
        getallcars();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menubar = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        welcome_user = new javax.swing.JLabel();
        btnallcars = new javax.swing.JButton();
        sidebar1 = new javax.swing.JPanel();
        btnsw = new javax.swing.JButton();
        btnminivan = new javax.swing.JButton();
        btnhb = new javax.swing.JButton();
        btnconv = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainpannel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        menubar.setBackground(new java.awt.Color(51, 204, 255));
        menubar.setLayout(null);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("change password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        menubar.add(jButton1);
        jButton1.setBounds(780, 30, 170, 40);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        menubar.add(jButton2);
        jButton2.setBounds(980, 30, 140, 40);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("my bookings");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        menubar.add(jButton3);
        jButton3.setBounds(490, 30, 140, 40);

        welcome_user.setText("jLabel1");
        menubar.add(welcome_user);
        welcome_user.setBounds(40, 30, 260, 50);

        btnallcars.setText("all cars");
        btnallcars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnallcarsActionPerformed(evt);
            }
        });
        menubar.add(btnallcars);
        btnallcars.setBounds(-60, 170, 90, 40);

        getContentPane().add(menubar);
        menubar.setBounds(30, 10, 1170, 120);

        sidebar1.setBackground(new java.awt.Color(102, 102, 102));
        sidebar1.setLayout(null);

        btnsw.setText("station wagon");
        btnsw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnswActionPerformed(evt);
            }
        });
        sidebar1.add(btnsw);
        btnsw.setBounds(30, 90, 110, 40);

        btnminivan.setText("minivan");
        btnminivan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnminivanActionPerformed(evt);
            }
        });
        sidebar1.add(btnminivan);
        btnminivan.setBounds(30, 160, 100, 40);

        btnhb.setText("hatchback");
        btnhb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhbActionPerformed(evt);
            }
        });
        sidebar1.add(btnhb);
        btnhb.setBounds(30, 230, 100, 40);

        btnconv.setText("convertible");
        btnconv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconvActionPerformed(evt);
            }
        });
        sidebar1.add(btnconv);
        btnconv.setBounds(30, 310, 100, 50);

        jButton4.setText("All Cars");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        sidebar1.add(jButton4);
        jButton4.setBounds(30, 20, 110, 50);

        getContentPane().add(sidebar1);
        sidebar1.setBounds(20, 150, 160, 400);

        mainpannel.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout mainpannelLayout = new javax.swing.GroupLayout(mainpannel);
        mainpannel.setLayout(mainpannelLayout);
        mainpannelLayout.setHorizontalGroup(
            mainpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );
        mainpannelLayout.setVerticalGroup(
            mainpannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(mainpannel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(330, 170, 320, 370);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnswActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnswActionPerformed
        fetchcars("STATION WAGON");
    }//GEN-LAST:event_btnswActionPerformed

    private void btnminivanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnminivanActionPerformed
        fetchcars("MINIVAN");
    }//GEN-LAST:event_btnminivanActionPerformed

    private void btnhbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhbActionPerformed
        fetchcars("HATCHBACK");
    }//GEN-LAST:event_btnhbActionPerformed

    private void btnconvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconvActionPerformed
        fetchcars("CONVERTIBLE");
    }//GEN-LAST:event_btnconvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userchangepswrd obj = new userchangepswrd(username);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MyBookings obj =new MyBookings();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
        userlogin obj = new userlogin();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnallcarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnallcarsActionPerformed
        // TODO add your handling code here:
        getallcars();
    }//GEN-LAST:event_btnallcarsActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        getallcars();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new userhome("nav").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnallcars;
    private javax.swing.JButton btnconv;
    private javax.swing.JButton btnhb;
    private javax.swing.JButton btnminivan;
    private javax.swing.JButton btnsw;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainpannel;
    private javax.swing.JPanel menubar;
    private javax.swing.JPanel sidebar1;
    private javax.swing.JLabel welcome_user;
    // End of variables declaration//GEN-END:variables

    public void fetchcars(String type) {

        new Thread(new Runnable() {
            @Override
            public void run() {
               
                try {

                    HttpResponse<String> httpResponse = Unirest.get("http://localhost:8888/fetchcars")
                            .queryString("type", type)
                            .asString();

                    if (httpResponse.getStatus() == 200) {
                        String anss = httpResponse.getBody();
                        System.out.println("" + anss);
                        StringTokenizer st = new StringTokenizer(anss, "~~");

                        int count = st.countTokens();

                        int i = 0;
                        design d[] = new design[globalclass.car_type.length];
                        mainpannel.setPreferredSize(new Dimension(1000, (500 * globalclass.car_type.length)));
                        Dimension d1 = Toolkit.getDefaultToolkit().getScreenSize();

//                        jScrollPane1.setBounds(250, 10, width - 500, height - 200);
 int x = 10, y = 10;

mainpannel.removeAll();
                        while (st.hasMoreTokens()) {
                            String res = st.nextToken();

                            StringTokenizer st2 = new StringTokenizer(res, ";;");

                              int carid=Integer.parseInt(st2.nextToken());
               String carname = st2.nextToken();
            String type2 = st2.nextToken();            
            String description =st2.nextToken();
            String brand =st2.nextToken();
            String petroltype = st2.nextToken();
            int pricewithdriver = Integer.parseInt(st2.nextToken());
            int pricewithoutdriver =Integer.parseInt(st2.nextToken());
            int security =Integer.parseInt(st2.nextToken());
            String photo = st2.nextToken();
                            
                            
                          

                            d[i] = new design();

                            d[i].setBounds(x, y, width - 600, 200);
                            y = y + 220;
                            d[i].lbcarname1.setText(carname);
                            d[i].lbdesc.setText(description);
                            d[i].lboutdvr.setText(pricewithoutdriver + "");
                            d[i].lbpricewithdvr.setText(pricewithdriver + "");

                            // image View
                             try {
                        URL uri = new URL("http://localhost:8888/GetResource/" + photo);
                        System.out.println(uri);
                        BufferedImage im = ImageIO.read(uri);
                        BufferedImage im2 = resizephoto(im, 200, 200);
                        d[i].jpic.setIcon(new ImageIcon(im2));

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                            
                            
                            
                            d[i].addMouseListener(new MouseAdapter(){
                                @Override
                                public void mouseClicked(MouseEvent e) {
//                                    super.mouseClicked(e); //To change body of generated methods, choose Tools | Templates.
                            
//                                    JOptionPane.showMessageDialog(rootPane, "Hello");
                                
BOOKING_DETAILS OBJ = new BOOKING_DETAILS(carid,carname,type2,description,brand,petroltype,pricewithdriver,pricewithoutdriver,security,photo);
                                }
                            
                            
                            });
                            mainpannel.add(d[i]);
                            mainpannel.repaint();
                            repaint();

                            i++;
                        }

                    }

                    repaint();

                } catch (UnirestException ex) {
                    ex.printStackTrace();
                }
            }
        }).start();

    }
    
    
      public void getallcars() {

        new Thread(new Runnable() {
            @Override
            public void run() {
               
                try {

                    HttpResponse<String> httpResponse = Unirest.get("http://localhost:8888/all")
                            
                            .asString();

                    if (httpResponse.getStatus() == 200) {
                        String anss = httpResponse.getBody();
                        System.out.println("" + anss);
                        StringTokenizer st = new StringTokenizer(anss, "~~");

                        int count = st.countTokens();

                        int i = 0;
                        design d[] = new design[globalclass.car_type.length];
                        mainpannel.setPreferredSize(new Dimension(1000, (500 * globalclass.car_type.length)));
                        Dimension d1 = Toolkit.getDefaultToolkit().getScreenSize();

//                        jScrollPane1.setBounds(250, 10, width - 500, height - 200);
 int x = 10, y = 10;

mainpannel.removeAll();
                        while (st.hasMoreTokens()) {
                            String res = st.nextToken();

                            StringTokenizer st2 = new StringTokenizer(res, ";;");

                              int carid=Integer.parseInt(st2.nextToken());
               String carname = st2.nextToken();
            String type2 = st2.nextToken();            
            String description =st2.nextToken();
            String brand =st2.nextToken();
            String petroltype = st2.nextToken();
            int pricewithdriver = Integer.parseInt(st2.nextToken());
            int pricewithoutdriver =Integer.parseInt(st2.nextToken());
            int security =Integer.parseInt(st2.nextToken());
            String photo = st2.nextToken();
                            
                            
                          

                            d[i] = new design();

                            d[i].setBounds(x, y, width - 600, 200);
                            y = y + 220;
                            d[i].lbcarname1.setText(carname);
                            d[i].lbdesc.setText(description);
                            d[i].lboutdvr.setText(pricewithoutdriver + "");
                            d[i].lbpricewithdvr.setText(pricewithdriver + "");

                            // image View
                             try {
                        URL uri = new URL("http://localhost:8888/GetResource/" + photo);
                        System.out.println(uri);
                        BufferedImage im = ImageIO.read(uri);
                        BufferedImage im2 = resizephoto(im, 200, 200);
                        d[i].jpic.setIcon(new ImageIcon(im2));

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                            
                            
                            
                            d[i].addMouseListener(new MouseAdapter(){
                                @Override
                                public void mouseClicked(MouseEvent e) {
//                                    super.mouseClicked(e); //To change body of generated methods, choose Tools | Templates.
                            
//                                    JOptionPane.showMessageDialog(rootPane, "Hello");
                                
BOOKING_DETAILS OBJ = new BOOKING_DETAILS(carid,carname,type2,description,brand,petroltype,pricewithdriver,pricewithoutdriver,security,photo);
                                }
                            
                            
                            });
                            mainpannel.add(d[i]);
                            mainpannel.repaint();
                            repaint();

                            i++;
                        }

                    }

                    repaint();

                } catch (UnirestException ex) {
                    ex.printStackTrace();
                }
            }
        }).start();

    }
    BufferedImage resizephoto(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
}
